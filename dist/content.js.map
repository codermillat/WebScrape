{"version":3,"file":"content.js","sources":["../src/content/index.ts"],"sourcesContent":["/**\n * Content script modular scaffold (Phase 2).\n * Legacy root content.js still active via manifest; this bundle is for\n * parallel development & verification before manifest path switch.\n *\n * Future planned modules (to be added incrementally):\n *  - domWalker.ts        (single-pass DOM traversal)\n *  - fees.ts             (fee/table heuristics + synthesis)\n *  - pagination.ts       (tab/accordion/pagination sweeping)\n *  - siteMemory.ts       (dedupe + eviction policy)\n *  - llmPipeline.ts      (chunking + prompt assembly)\n *  - siderUI.ts          (in-page UI refactor)\n *  - util/*.ts           (hashing, visibility, text cleaning)\n */\nimport { logger } from '@shared/logger';\n\nlogger.info('Content scaffold bundle loaded (inactive until manifest swap)');\n\n(function bootstrap() {\n  try {\n    // Guard against double execution when manually injected for testing\n    if ((window as any).__contentScaffoldLoaded) {\n      logger.debug('Content scaffold already loaded, skipping');\n      return;\n    }\n    (window as any).__contentScaffoldLoaded = true;\n\n    // Lightweight ping handler for early integration tests\n    chrome.runtime.onMessage.addListener((msg, _sender, sendResponse) => {\n      if (msg && msg.__ping === 'content_scaffold') {\n        sendResponse({ ok: true, scaffold: true, ts: Date.now() });\n        return;\n      }\n      return false;\n    });\n\n    // Visual ephemeral marker (removed automatically)\n    const markId = 'content-scaffold-indicator';\n    if (!document.getElementById(markId)) {\n      const chip = document.createElement('div');\n      chip.id = markId;\n      chip.textContent = 'Content Scaffold Active';\n      chip.style.cssText = 'position:fixed;top:4px;left:4px;z-index:2147483647;font:11px system-ui;padding:3px 6px;background:#0f766e;color:#fff;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,.2);opacity:.9;';\n      document.documentElement.appendChild(chip);\n      setTimeout(() => chip.remove(), 2000);\n    }\n\n    logger.debug('Content scaffold init complete');\n  } catch (e) {\n    logger.error('Content scaffold init failed', e instanceof Error ? { message: e.message, stack: e.stack } : e);\n  }\n})();\n"],"names":[],"mappings":";AAgBA,OAAO,KAAK,+DAA+D;AAAA,CAE1E,SAAS,YAAY;AACpB,MAAI;AAEF,QAAK,OAAe,yBAAyB;AAC3C,aAAO,MAAM,2CAA2C;AACxD;AAAA,IACF;AACC,WAAe,0BAA0B;AAG1C,WAAO,QAAQ,UAAU,YAAY,CAAC,KAAK,SAAS,iBAAiB;AACnE,UAAI,OAAO,IAAI,WAAW,oBAAoB;AAC5C,qBAAa,EAAE,IAAI,MAAM,UAAU,MAAM,IAAI,KAAK,IAAA,GAAO;AACzD;AAAA,MACF;AACA,aAAO;AAAA,IACT,CAAC;AAGD,UAAM,SAAS;AACf,QAAI,CAAC,SAAS,eAAe,MAAM,GAAG;AACpC,YAAM,OAAO,SAAS,cAAc,KAAK;AACzC,WAAK,KAAK;AACV,WAAK,cAAc;AACnB,WAAK,MAAM,UAAU;AACrB,eAAS,gBAAgB,YAAY,IAAI;AACzC,iBAAW,MAAM,KAAK,OAAA,GAAU,GAAI;AAAA,IACtC;AAEA,WAAO,MAAM,gCAAgC;AAAA,EAC/C,SAAS,GAAG;AACV,WAAO,MAAM,gCAAgC,aAAa,QAAQ,EAAE,SAAS,EAAE,SAAS,OAAO,EAAE,MAAA,IAAU,CAAC;AAAA,EAC9G;AACF,GAAA;"}